"use strict";const e=new Map;function n(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)}function t(e,n){const t=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();null==n?this.removeAttribute(t):this.setAttribute(t,n.toString())}function o(e,n,t=!1){return e.shadowRoot?t?Array.from(e.shadowRoot.querySelectorAll(n))||null:e.shadowRoot.querySelector(n):null}const r=new WeakMap,i=new Set;let u=null,s=!1;function c(e,n){if(!u)return;let t=r.get(e);t||(t=new Map,r.set(e,t));let o=t.get(n);o||(o=new Set,t.set(n,o)),o.add(u)}function d(e,n){const t=r.get(e);if(!t)return;const o=t.get(n);o&&o.forEach(e=>i.add(e)),s||(s=!0,queueMicrotask(()=>{i.forEach(e=>e()),i.clear(),s=!1}))}function l(e,t){return n(e)?new Proxy(e,{get(e,o,r){const i=Reflect.get(e,o,r);return t?.deep&&n(i)?l(i,t):(c(e,o),i)},set(e,n,t,o){if(Reflect.get(e,n,o)===t)return!0;const r=Reflect.set(e,n,t,o);return d(e,n),r}}):e}exports.attribute=function(e,n){if("field"!==n.kind)throw new Error(`@attribute can only be used on fields, not on "${n.kind}"`);n.addInitializer(function(){const e=n.name,o=l({value:this[e]});t.call(this,e,o.value),Object.defineProperty(this,e,{get:()=>o.value,set(n){n!==o.value&&(o.value=n,t.call(this,e,n))}})})},exports.bound=function(e,n){if("method"!==n.kind)throw new Error(`@bound can only be used on methods, not on "${n.kind}"`);n.addInitializer(function(){this[n.name]=this[n.name].bind(this)})},exports.computed=function(e,n){if("field"!==n.kind)throw new Error(`@computed can only be used on fields, not on "${n.kind}"`);n.addInitializer(function(){const e=function(e){let n,t=!0;const o=()=>{t=!0,d(r,"value")},r=l({get value(){return t&&(u=o,n=e(),u=null,t=!1),c(r,"value"),n}});return r}(this[n.name].bind(this));Object.defineProperty(this,n.name,{get:()=>e.value})})},exports.customElement=function(e){return function(n,t){if("class"!==t.kind)throw new Error(`@customElement can only be used on classes, not on "${t.kind}"`);t.addInitializer(()=>customElements.define(e,n))}},exports.effect=function(e,n){if("method"!==n.kind)throw new Error(`@effect can only be used on methods, not on "${n.kind}"`);n.addInitializer(function(){const n=e.bind(this);queueMicrotask(()=>{return u=e=n,e(),void(u=null);var e})})},exports.inject=function(n){return function(t,o){return"field"===o.kind?()=>e.get(n):"method"===o.kind?function(...o){const r=e.get(n);return t.apply(this,[...o,r])}:void 0}},exports.property=function(e,n){if("field"!==n.kind)throw new Error(`@property can only be used on fields, not on "${n.kind}"`);n.addInitializer(function(){const e=this[n.name],t=l({value:e});Object.defineProperty(this,n.name,{get:()=>t.value,set:e=>{t.value=e}})})},exports.provide=function(n){return function(t,o){if("class"!==o.kind)throw new Error(`@Service can only be used on classes, not on "${o.kind}"`);e.set(n,new t)}},exports.query=function(e){return function(n,t){if("field"!==t.kind)throw new Error(`@query can only be used on fields, not on "${t.kind}"`);t.addInitializer(function(){Object.defineProperty(this,t.name,{get:function(){return o(this,e,!1)},configurable:!0,enumerable:!0})})}},exports.queryAll=function(e){return function(n,t){if("field"!==t.kind)throw new Error(`@queryAll can only be used on fields, not on "${t.kind}"`);t.addInitializer(function(){Object.defineProperty(this,t.name,{get:function(){return o(this,e,!0)},configurable:!0,enumerable:!0})})}},exports.state=function(e,n){if("field"!==n.kind)throw new Error(`@state can only be used on fields, not on "${n.kind}"`);return(e,n={})=>l(e,n)};
//# sourceMappingURL=acejs.cjs.js.map

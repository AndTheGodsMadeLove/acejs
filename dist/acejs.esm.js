const n=new Map;function e(e){return function(t,o){if("class"!==o.kind)throw new Error(`@Service can only be used on classes, not on "${o.kind}"`);n.set(e,new t)}}function t(e){return function(t,o){return"field"===o.kind?()=>n.get(e):"method"===o.kind?function(...o){const i=n.get(e);return t.apply(this,[...o,i])}:void 0}}function o(n){return null!==n&&"object"==typeof n&&!Array.isArray(n)}function i(n,e){const t=n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();null==e?this.removeAttribute(t):this.setAttribute(t,e.toString())}function r(n,e,t=!1){return n.shadowRoot?t?Array.from(n.shadowRoot.querySelectorAll(e))||null:n.shadowRoot.querySelector(e):null}const u=new WeakMap,d=new Set;let l=null,c=!1;function a(n,e){if(!l)return;let t=u.get(n);t||(t=new Map,u.set(n,t));let o=t.get(e);o||(o=new Set,t.set(e,o)),o.add(l)}function s(n,e){const t=u.get(n);if(!t)return;const o=t.get(e);o&&o.forEach(n=>d.add(n)),c||(c=!0,queueMicrotask(()=>{d.forEach(n=>n()),d.clear(),c=!1}))}function f(n,e){return o(n)?new Proxy(n,{get(n,t,i){const r=Reflect.get(n,t,i);return e?.deep&&o(r)?f(r,e):(a(n,t),r)},set(n,e,t,o){if(Reflect.get(n,e,o)===t)return!0;const i=Reflect.set(n,e,t,o);return s(n,e),i}}):n}function h(n,e){if("method"!==e.kind)throw new Error(`@effect can only be used on methods, not on "${e.kind}"`);e.addInitializer(function(){const e=n.bind(this);queueMicrotask(()=>{return l=n=e,n(),void(l=null);var n})})}function w(n,e){if("field"!==e.kind)throw new Error(`@state can only be used on fields, not on "${e.kind}"`);return(n,e={})=>f(n,e)}function b(n,e){if("field"!==e.kind)throw new Error(`@computed can only be used on fields, not on "${e.kind}"`);e.addInitializer(function(){const n=function(n){let e,t=!0;const o=()=>{t=!0,s(i,"value")},i=f({get value(){return t&&(l=o,e=n(),l=null,t=!1),a(i,"value"),e}});return i}(this[e.name].bind(this));Object.defineProperty(this,e.name,{get:()=>n.value})})}function y(n,e){if("field"!==e.kind)throw new Error(`@property can only be used on fields, not on "${e.kind}"`);e.addInitializer(function(){const n=this[e.name],t=f({value:n});Object.defineProperty(this,e.name,{get:()=>t.value,set:n=>{t.value=n}})})}function k(n){return function(e,t){if("field"!==t.kind)throw new Error(`@query can only be used on fields, not on "${t.kind}"`);t.addInitializer(function(){Object.defineProperty(this,t.name,{get:function(){return r(this,n,!1)},configurable:!0,enumerable:!0})})}}function m(n){return function(e,t){if("field"!==t.kind)throw new Error(`@queryAll can only be used on fields, not on "${t.kind}"`);t.addInitializer(function(){Object.defineProperty(this,t.name,{get:function(){return r(this,n,!0)},configurable:!0,enumerable:!0})})}}function g(n){return function(e,t){if("class"!==t.kind)throw new Error(`@customElement can only be used on classes, not on "${t.kind}"`);t.addInitializer(()=>customElements.define(n,e))}}function p(n,e){if("method"!==e.kind)throw new Error(`@bound can only be used on methods, not on "${e.kind}"`);e.addInitializer(function(){this[e.name]=this[e.name].bind(this)})}function v(n,e){if("field"!==e.kind)throw new Error(`@attribute can only be used on fields, not on "${e.kind}"`);e.addInitializer(function(){const n=e.name,t=f({value:this[n]});i.call(this,n,t.value),Object.defineProperty(this,n,{get:()=>t.value,set(e){e!==t.value&&(t.value=e,i.call(this,n,e))}})})}export{v as attribute,p as bound,b as computed,g as customElement,h as effect,t as inject,y as property,e as provide,k as query,m as queryAll,w as state};
//# sourceMappingURL=acejs.esm.js.map
